Жизнь команды

    1) Кэш первого уровня для команд
    2) Декодер - переводит внешний набор команд во внутренний (где-то по 4 штуки) 
    3) ROB - (Rearrange Order Block ?)
    4) Ковейер. Может быть много. Intel: 6 штук (0, 1, 5 - вычислительные, 2, 3, 4 - работа с загрузкой/выгрузкой данных)
        0 - крутой, 1 и 5 - облегченные и оптимизированные
        ILP - Instruction Level Paralellism
        Три подряд независимые друг от друга команды - очень профит.
        Macro Fusion - некоторые внутренние команды круче внешних (например, "сравнить и перейти") => из нескольких внешних команд получается одна внутренняя.
            Вывод: сливаемые команды не следует отрывать друг от друга (в смысле оптимизации за счет перемешивания команд), 
            иначе декодер не справится со слиянием.
        Основная проблема: супероптимизированные вычисления работают быстрее обращений к памяти; последние тормозят весь алгоритм.
        В Haswell хотят добавить еще два конвейера. Раньше делать jump умел только 5ый конвейер, 
            теперь - 0ой и 6ой (зачем два джампа сразу? для гипертрединга).
        Как писать программы: "Оно как-то работает, и когда мы это допишем, выйдет новое железо, на котором это не будет тормозить".
            (на самом деле, нет)
            
        AMD: много, но плохих ядер.
        Intel: мало, но жирных ядер.

        AMDшный процессор:
        
        +---------------+
        |               |
        | +---+   +---+ |
        | |ALU|   |ALU| |
        | +---+   +---+ |
        |               |
        |  +---------+  |
        |  |   FPU   |  |
        |  +---------+  |
        |               |
        +---------------+
        
		данная аритектура процессора у amd посшла с процессоров bulldozer
